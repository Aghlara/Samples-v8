//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CaseHandlingDatabaseModel", "FK_CASEID_CASEREF", "Case", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FlexRule.Samples.CaseHandling.Server.System.Repository.DataAccess.CaseEntity), "Assignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FlexRule.Samples.CaseHandling.Server.System.Repository.DataAccess.AssignmentEntity))]
[assembly: EdmRelationshipAttribute("CaseHandlingDatabaseModel", "FK_OfficerID_OfficerRef", "Officer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FlexRule.Samples.CaseHandling.Server.System.Repository.DataAccess.OfficerEntity), "Assignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FlexRule.Samples.CaseHandling.Server.System.Repository.DataAccess.AssignmentEntity))]
[assembly: EdmRelationshipAttribute("CaseHandlingDatabaseModel", "FK_ManagerID_ManagerRef", "Officer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FlexRule.Samples.CaseHandling.Server.System.Repository.DataAccess.OfficerEntity), "Officer1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FlexRule.Samples.CaseHandling.Server.System.Repository.DataAccess.OfficerEntity))]

#endregion

namespace FlexRule.Samples.CaseHandling.Server.System.Repository.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CaseHandlingDatabaseContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CaseHandlingDatabaseContext object using the connection string found in the 'CaseHandlingDatabaseContext' section of the application configuration file.
        /// </summary>
        public CaseHandlingDatabaseContext() : base("name=CaseHandlingDatabaseContext", "CaseHandlingDatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CaseHandlingDatabaseContext object.
        /// </summary>
        public CaseHandlingDatabaseContext(string connectionString) : base(connectionString, "CaseHandlingDatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CaseHandlingDatabaseContext object.
        /// </summary>
        public CaseHandlingDatabaseContext(EntityConnection connection) : base(connection, "CaseHandlingDatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssignmentEntity> AssignmentEntities
        {
            get
            {
                if ((_AssignmentEntities == null))
                {
                    _AssignmentEntities = base.CreateObjectSet<AssignmentEntity>("AssignmentEntities");
                }
                return _AssignmentEntities;
            }
        }
        private ObjectSet<AssignmentEntity> _AssignmentEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CaseEntity> CaseEntities
        {
            get
            {
                if ((_CaseEntities == null))
                {
                    _CaseEntities = base.CreateObjectSet<CaseEntity>("CaseEntities");
                }
                return _CaseEntities;
            }
        }
        private ObjectSet<CaseEntity> _CaseEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OfficerEntity> OfficerEntities
        {
            get
            {
                if ((_OfficerEntities == null))
                {
                    _OfficerEntities = base.CreateObjectSet<OfficerEntity>("OfficerEntities");
                }
                return _OfficerEntities;
            }
        }
        private ObjectSet<OfficerEntity> _OfficerEntities;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssignmentEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignmentEntities(AssignmentEntity assignmentEntity)
        {
            base.AddObject("AssignmentEntities", assignmentEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CaseEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCaseEntities(CaseEntity caseEntity)
        {
            base.AddObject("CaseEntities", caseEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfficerEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfficerEntities(OfficerEntity officerEntity)
        {
            base.AddObject("OfficerEntities", officerEntity);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CaseHandlingDatabaseModel", Name="AssignmentEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssignmentEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssignmentEntity object.
        /// </summary>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static AssignmentEntity CreateAssignmentEntity(global::System.Boolean active, global::System.Guid id)
        {
            AssignmentEntity assignmentEntity = new AssignmentEntity();
            assignmentEntity.Active = active;
            assignmentEntity.ID = id;
            return assignmentEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Assigned
        {
            get
            {
                return _Assigned;
            }
            set
            {
                OnAssignedChanging(value);
                ReportPropertyChanging("Assigned");
                _Assigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Assigned");
                OnAssignedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Assigned;
        partial void OnAssignedChanging(Nullable<global::System.DateTime> value);
        partial void OnAssignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Accepted
        {
            get
            {
                return _Accepted;
            }
            set
            {
                OnAcceptedChanging(value);
                ReportPropertyChanging("Accepted");
                _Accepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accepted");
                OnAcceptedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Accepted;
        partial void OnAcceptedChanging(Nullable<global::System.DateTime> value);
        partial void OnAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FlowInstanceID
        {
            get
            {
                return _FlowInstanceID;
            }
            set
            {
                OnFlowInstanceIDChanging(value);
                ReportPropertyChanging("FlowInstanceID");
                _FlowInstanceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlowInstanceID");
                OnFlowInstanceIDChanged();
            }
        }
        private Nullable<global::System.Guid> _FlowInstanceID;
        partial void OnFlowInstanceIDChanging(Nullable<global::System.Guid> value);
        partial void OnFlowInstanceIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CaseHandlingDatabaseModel", "FK_CASEID_CASEREF", "Case")]
        public CaseEntity Case
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CaseEntity>("CaseHandlingDatabaseModel.FK_CASEID_CASEREF", "Case").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CaseEntity>("CaseHandlingDatabaseModel.FK_CASEID_CASEREF", "Case").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CaseEntity> CaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CaseEntity>("CaseHandlingDatabaseModel.FK_CASEID_CASEREF", "Case");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CaseEntity>("CaseHandlingDatabaseModel.FK_CASEID_CASEREF", "Case", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CaseHandlingDatabaseModel", "FK_OfficerID_OfficerRef", "Officer")]
        public OfficerEntity Officer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerEntity>("CaseHandlingDatabaseModel.FK_OfficerID_OfficerRef", "Officer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerEntity>("CaseHandlingDatabaseModel.FK_OfficerID_OfficerRef", "Officer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OfficerEntity> OfficerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerEntity>("CaseHandlingDatabaseModel.FK_OfficerID_OfficerRef", "Officer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OfficerEntity>("CaseHandlingDatabaseModel.FK_OfficerID_OfficerRef", "Officer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CaseHandlingDatabaseModel", Name="CaseEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CaseEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CaseEntity object.
        /// </summary>
        /// <param name="task">Initial value of the Task property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static CaseEntity CreateCaseEntity(global::System.String task, global::System.DateTime created, global::System.Guid id)
        {
            CaseEntity caseEntity = new CaseEntity();
            caseEntity.Task = task;
            caseEntity.Created = created;
            caseEntity.ID = id;
            return caseEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Task
        {
            get
            {
                return _Task;
            }
            set
            {
                OnTaskChanging(value);
                ReportPropertyChanging("Task");
                _Task = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Task");
                OnTaskChanged();
            }
        }
        private global::System.String _Task;
        partial void OnTaskChanging(global::System.String value);
        partial void OnTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Finished
        {
            get
            {
                return _Finished;
            }
            set
            {
                OnFinishedChanging(value);
                ReportPropertyChanging("Finished");
                _Finished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finished");
                OnFinishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Finished;
        partial void OnFinishedChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientEmail
        {
            get
            {
                return _ClientEmail;
            }
            set
            {
                OnClientEmailChanging(value);
                ReportPropertyChanging("ClientEmail");
                _ClientEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientEmail");
                OnClientEmailChanged();
            }
        }
        private global::System.String _ClientEmail;
        partial void OnClientEmailChanging(global::System.String value);
        partial void OnClientEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CaseHandlingDatabaseModel", "FK_CASEID_CASEREF", "Assignment")]
        public EntityCollection<AssignmentEntity> Assignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignmentEntity>("CaseHandlingDatabaseModel.FK_CASEID_CASEREF", "Assignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignmentEntity>("CaseHandlingDatabaseModel.FK_CASEID_CASEREF", "Assignment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CaseHandlingDatabaseModel", Name="OfficerEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OfficerEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OfficerEntity object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static OfficerEntity CreateOfficerEntity(global::System.String name, global::System.String role, global::System.Guid id)
        {
            OfficerEntity officerEntity = new OfficerEntity();
            officerEntity.Name = name;
            officerEntity.Role = role;
            officerEntity.ID = id;
            return officerEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CaseHandlingDatabaseModel", "FK_OfficerID_OfficerRef", "Assignment")]
        public EntityCollection<AssignmentEntity> Assignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignmentEntity>("CaseHandlingDatabaseModel.FK_OfficerID_OfficerRef", "Assignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignmentEntity>("CaseHandlingDatabaseModel.FK_OfficerID_OfficerRef", "Assignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CaseHandlingDatabaseModel", "FK_ManagerID_ManagerRef", "Officer1")]
        public EntityCollection<OfficerEntity> TeamMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OfficerEntity>("CaseHandlingDatabaseModel.FK_ManagerID_ManagerRef", "Officer1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OfficerEntity>("CaseHandlingDatabaseModel.FK_ManagerID_ManagerRef", "Officer1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CaseHandlingDatabaseModel", "FK_ManagerID_ManagerRef", "Officer")]
        public OfficerEntity Manager
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerEntity>("CaseHandlingDatabaseModel.FK_ManagerID_ManagerRef", "Officer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerEntity>("CaseHandlingDatabaseModel.FK_ManagerID_ManagerRef", "Officer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OfficerEntity> ManagerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerEntity>("CaseHandlingDatabaseModel.FK_ManagerID_ManagerRef", "Officer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OfficerEntity>("CaseHandlingDatabaseModel.FK_ManagerID_ManagerRef", "Officer", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
